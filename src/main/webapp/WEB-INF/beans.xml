<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:jaxrs="http://cxf.apache.org/jaxrs" xmlns:util="http://www.springframework.org/schema/util"
    xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd
    http://cxf.apache.org/jaxrs
    http://cxf.apache.org/schemas/jaxrs.xsd">

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <property name="valueSeparator" value="?" />
        <property name="ignoreResourceNotFound" value="true" />
        <property name="locations" value="file:${user.home}/.opencds/opencds-cda.properties" />
    </bean>

    <import resource="classpath:META-INF/cxf/cxf.xml" />
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml" />

    <!-- BEGIN : REST : Configuration Services -->

    <bean id="sepsisRestService" class="org.opencds.fhir.rest.SepsisRestService">
        <constructor-arg name="responseConfigFile" value="${response.config}"></constructor-arg>
    </bean>

    <jaxrs:server id="opencdsCdaRestServer" address="/rest">
        <jaxrs:serviceBeans>
            <ref bean="sepsisRestService" />
        </jaxrs:serviceBeans>
    </jaxrs:server>

<!--     <bean id="filterChainProxy" class="org.springframework.security.web.FilterChainProxy"> -->
<!--         <constructor-arg> -->
<!--             <list> -->
<!--                 <security:filter-chain pattern="/config/**" filters="basicAuthenticationFilter" /> -->
<!--             </list> -->
<!--         </constructor-arg> -->
<!--     </bean> -->

    <!-- To allow public access by default and to set authentication mode to basic login/password -->
<!--     <security:http create-session="stateless" realm="OpenCDS Configuration Service" use-expressions="true" authentication-manager-ref="authenticationManager"> -->
<!--         <security:intercept-url pattern="/config/**" method="GET" access="ROLE_CONFIG_USER" /> -->
<!--         <security:intercept-url pattern="/config/**" access="hasRole('ROLE_CONFIG_ADMIN')" /> -->
<!--         <security:http-basic entry-point-ref="authenticationEntryPoint" /> -->
<!--     </security:http> -->

    <!-- To create user/password with roles -->
<!--     <security:authentication-manager alias="authenticationManager"> -->
<!--         <security:authentication-provider user-service-ref="userDetailsService" /> -->
<!--     </security:authentication-manager> -->

<!--     <bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint"> -->
<!--         <property name="realmName" value="OpenCDS Configuration Service" /> -->
<!--     </bean> -->

<!--     <bean id="basicAuthenticationFilter" class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter"> -->
<!--         <property name="authenticationManager" ref="authenticationManager" /> -->
<!--         <property name="authenticationEntryPoint" ref="authenticationEntryPoint" /> -->
<!--     </bean> -->

<!--     <bean id="roleVoter" class="org.springframework.security.access.vote.RoleHierarchyVoter"> -->
<!--         <constructor-arg ref="roleHierarchy" /> -->
<!--     </bean> -->

<!--     <bean id="roleHierarchy" class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl"> -->
<!--         <property name="hierarchy"> -->
<!--             <value> -->
<!--                 ROLE_CONFIG_ADMIN > ROLE_CONFIG_USER -->
<!--             </value> -->
<!--         </property> -->
<!--     </bean> -->

    <!-- END : REST : Configuration Services -->

</beans>
